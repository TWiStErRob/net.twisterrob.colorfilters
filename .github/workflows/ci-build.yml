name: "ðŸ”¨ Build & Verify"

on:
  workflow_call

jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: "Set up JDK 17."
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
  
      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4
  
      - name: "Build & Verify project."
        id: gradle
        run: >
          ./gradlew
          --no-daemon
          --no-build-cache
          --continue
          --stacktrace
          --scan
          assemble
          lint
          detekt
          detektMain
          detektTest
          test
          check
          violationReportHtml
          violationCountFile
  
      - name: "Publish 'Gradle' result and Build Scan URL."
        if: ${{ (success() || failure()) && steps.gradle != null && steps.gradle.outputs.result-success != null }}
        uses: actions/github-script@v7
        env:
          PARAM_BUILD_SCAN_URL: ${{ steps.gradle.outputs.build-scan-url }}
          PARAM_GRADLE_RESULT_SUCCESS: ${{ steps.gradle.outputs.result-success }}
          PARAM_GRADLE_RESULT_TEXT: ${{ steps.gradle.outputs.result-text }}
          PARAM_CHECK_NAME_GRADLE: ${{ format(inputs.name-check-gradle, inputs.android-api, inputs.android-image-type, inputs.android-image-arch) }}
        with:
          script: |
            const buildScanUrl = process.env.PARAM_BUILD_SCAN_URL || undefined; // Empty string is falsy.
            const success = process.env.PARAM_GRADLE_RESULT_SUCCESS === "true";
            const description = process.env.PARAM_GRADLE_RESULT_TEXT;
            const statusName = process.env.PARAM_CHECK_NAME_GRADLE;
            if (!buildScanUrl) {
                core.warning(`No build scan URL found, ${statusName} will have no link.`);
            }
            await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha,
                state: success ? "success" : "failure",
                context: "CI / Build & Verify / build / Gradle",
                // Truncate to be sure it fits:
                // > HttpError: Validation Failed: {"resource":"Status","code":"custom",
                // > "field":"description","message":"description is too long (maximum is 140 characters)"}
                // Max length is 140, give some space for potential Unicode.
                description: description.length > 130
                    ? `${description.substring(0, 130)}â€¦`
                    : description,
                target_url: buildScanUrl,
            });
    
      - name: "Upload 'Lint Results HTMLs' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Lint Results HTMLs'
          path: ${{ github.workspace }}/**/build/reports/lint-results*.html
  
      - name: "Upload 'Lint Merged Results' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Lint Merged Results'
          path: ${{ github.workspace }}/build/reports/violations.*
  
      - name: "Fail if there are lint violations."
        if: ${{ success() || failure() }}
        run: |
          count=$(cat "${{ github.workspace }}/build/reports/violations.count")
          if [[ "$count" != "0" ]]; then
            echo "There were $count violations"
            exit 1
          else
            echo "No violations found."
            exit 0
          fi
  
      - name: "Upload 'Unit Test Results' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Unit Test Results'
          if-no-files-found: error
          path: ${{ github.workspace }}/**/build/reports/tests/*/
  
      - name: "Publish 'Unit Results' check suite."
        if: ${{ success() || failure() }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: 'ðŸ”” Test: Unit Results'
          comment_mode: off
          report_individual_runs: true
          test_changes_limit: 0
          junit_files: ${{ github.workspace }}/**/build/test-results/*/TEST-*.xml
  
      - name: "Upload 'Detekt Results' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Detekt Results'
          if-no-files-found: error
          path: ${{ github.workspace }}/**/build/reports/detekt/detekt.*
  
      - name: "Upload 'Detekt Merged Results' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Detekt Merged Results'
          path: ${{ github.workspace }}/build/reports/detekt/merge.*
  
      - name: "Publish 'detekt' GitHub Code Scanning analysis."
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ success() || failure() }}
        with:
          checkout_path: ${{ github.workspace }}
          sarif_file: ${{ github.workspace }}/build/reports/detekt/merge.sarif
