import org.jetbrains.kotlin.gradle.tasks.KotlinCompileWithWorkers

apply plugin: 'net.twisterrob.android-app'
apply plugin: 'net.twisterrob.kotlin'

dependencies {
	implementation project(':feature:base')
	implementation project(':feature:image')
	implementation project(':feature:lighting')
	implementation project(':feature:porterduff')
	implementation project(':feature:matrix')
	implementation project(':feature:palette')
	implementation project(':feature:resfont')
	implementation project(':feature:keyboard')
	implementation project(':feature:about')
}

dependencies {
	androidTestImplementation project(':test-base')
}

android {
	defaultConfig {
		applicationId 'net.twisterrob.colorfilters'
	}

	/* 
	buildTypes {
		// didn't work, the proguarding keeps failing on the test and the tests crash with NoClassDefFoundError
		testBuildType "release"
		release {
			testProguardFile 'src/androidTest/proguard.pro'
		}
	}
	*/

	sourceSets {
		androidTest {
			// Depend on non-test files from other projects.
			// This needs a bit of trickery, because srcDir don't support filters properly (on a per-directory basis).
			// So include a root folder where each module can be separately added, and exclude tests as relative paths.
			// rootDir cannot be used because kaptAndroidTest would try to hash .gradle/fileContent/fileContent.lock
//			println(kotlin.srcDirs)
			File root = new File(rootDir, 'feature')
			kotlin.srcDir root
			// Explicitly include sources of app/androidTest
			//kotlin.include "net/twisterrob/colorfilters/"
//			// Exclude production code
			kotlin.exclude "**/src/main/kotlin/"
//			// Include Actors and helpers (non-test files) from other modules
			kotlin.exclude("**/*Test.kt")
			kotlin.exclude("**/build/")
			configurations['implementation'].dependencies.withType(ProjectDependency) {
				evaluationDependsOn it.dependencyProject.path // get .android ready
				it.dependencyProject.android.sourceSets.androidTest.kotlin.srcDirs.each { File dir ->
					def relative = root.toPath().relativize(dir.toPath()).toFile()
//					println("androidTest: $dir - > $relative")
					kotlin.include "$relative/"
//					kotlin.srcDir(dir)
//					kotlin.exclude "src/main/kotlin/"
				}
			}
//			afterEvaluate {
//				kotlin.sourceFiles.each { println ("kotlin.sourceFiles: $it") }
//				tasks.named("compileDebugAndroidTestKotlin").configure { task ->
//					task.doFirst {
//						KotlinCompileWithWorkers t = task
//						t.getSourceRoots$kotlin_gradle_plugin().kotlinSourceFiles.files.each { println it }
//						task.inputs.sourceFiles.files.each { println ("${task}.inputs.sourceFiles: $it") }
//						throw new Exception()
//					}
//				}
//			}
		}
	}
	lintOptions {
		checkDependencies = true
	}
}
